Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 optional_variable: optional_variable variable
    5                  | error ';'
    6                  | %empty

    7 variable: IDENTIFIER ':' type IS statement_

    8 parameters: parameters ',' parameter
    9           | parameter
   10           | %empty

   11 parameter: IDENTIFIER ':' type

   12 type: INTEGER
   13     | REAL
   14     | BOOLEAN

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement ';'
   17           | error ';'

   18 statement: expression
   19          | REDUCE binary_operator reductions ENDREDUCE
   20          | IF expression THEN statement_ ELSE statement_ ENDIF
   21          | CASE expression IS cases OTHERS ARROW statement_ ENDCASE

   22 cases: cases case
   23      | %empty

   24 case: WHEN INT_LITERAL ARROW statement ';'
   25     | error ';'

   26 reductions: reductions statement_
   27           | %empty

   28 expression: expression OROP binary_logic
   29           | binary_logic

   30 binary_logic: binary_logic ANDOP unary_logic
   31             | unary_logic

   32 unary_logic: NOTOP unary_logic
   33            | relation

   34 binary_operator: ADDOP
   35                | MULOP
   36                | REMOP
   37                | EXPOP
   38                | RELOP
   39                | ANDOP
   40                | OROP

   41 relation: relation RELOP term
   42         | term

   43 term: term ADDOP factor
   44     | factor

   45 factor: factor MULOP exp
   46       | factor REMOP exp
   47       | exp

   48 exp: primary
   49    | primary EXPOP exp

   50 primary: '(' expression ')'
   51        | INT_LITERAL
   52        | REAL_LITERAL
   53        | BOOL_LITERAL
   54        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 50
')' (41) 50
',' (44) 8
':' (58) 7 11
';' (59) 2 3 5 15 16 17 24 25
error (256) 3 5 17 25
IDENTIFIER (258) 2 7 11 54
INT_LITERAL (259) 24 51
REAL_LITERAL (260) 52
BOOL_LITERAL (261) 53
ADDOP (262) 34 43
MULOP (263) 35 45
RELOP (264) 38 41
ANDOP (265) 30 39
OROP (266) 28 40
NOTOP (267) 32
REMOP (268) 36 46
EXPOP (269) 37 49
ARROW (270) 21 24
REAL (271) 13
BEGIN_ (272) 15
BOOLEAN (273) 14
END (274) 15
ENDREDUCE (275) 19
FUNCTION (276) 2
INTEGER (277) 12
IS (278) 7 21
REDUCE (279) 19
RETURNS (280) 2
CASE (281) 21
ELSE (282) 20
ENDCASE (283) 21
ENDIF (284) 20
IF (285) 20
OTHERS (286) 21
THEN (287) 20
WHEN (288) 24


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1, on right: 0
function_header (41)
    on left: 2 3, on right: 1
optional_variable (42)
    on left: 4 5 6, on right: 1 4
variable (43)
    on left: 7, on right: 4
parameters (44)
    on left: 8 9 10, on right: 2 8
parameter (45)
    on left: 11, on right: 8 9
type (46)
    on left: 12 13 14, on right: 2 7 11
body (47)
    on left: 15, on right: 1
statement_ (48)
    on left: 16 17, on right: 7 15 20 21 26
statement (49)
    on left: 18 19 20 21, on right: 16 24
cases (50)
    on left: 22 23, on right: 21 22
case (51)
    on left: 24 25, on right: 22
reductions (52)
    on left: 26 27, on right: 19 26
expression (53)
    on left: 28 29, on right: 18 20 21 28 50
binary_logic (54)
    on left: 30 31, on right: 28 29 30
unary_logic (55)
    on left: 32 33, on right: 30 31 32
binary_operator (56)
    on left: 34 35 36 37 38 39 40, on right: 19
relation (57)
    on left: 41 42, on right: 33 41
term (58)
    on left: 43 44, on right: 41 42 43
factor (59)
    on left: 45 46 47, on right: 43 44 45 46
exp (60)
    on left: 48 49, on right: 45 46 47 49
primary (61)
    on left: 50 51 52 53 54, on right: 48 49


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    error  shift, and go to state 8

    IDENTIFIER  reduce using rule 6 (optional_variable)
    BEGIN_      reduce using rule 6 (optional_variable)

    optional_variable  go to state 9


State 5

    3 function_header: error ';' .

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 10 (parameters)

    parameters  go to state 11
    parameter   go to state 12


State 7

    0 $accept: function $end .

    $default  accept


State 8

    5 optional_variable: error . ';'

    ';'  shift, and go to state 13


State 9

    1 function: function_header optional_variable . body
    4 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 14
    BEGIN_      shift, and go to state 15

    variable  go to state 16
    body      go to state 17


State 10

   11 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 18


State 11

    2 function_header: FUNCTION IDENTIFIER parameters . RETURNS type ';'
    8 parameters: parameters . ',' parameter

    RETURNS  shift, and go to state 19
    ','      shift, and go to state 20


State 12

    9 parameters: parameter .

    $default  reduce using rule 9 (parameters)


State 13

    5 optional_variable: error ';' .

    $default  reduce using rule 5 (optional_variable)


State 14

    7 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 21


State 15

   15 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    CASE          shift, and go to state 29
    IF            shift, and go to state 30
    '('           shift, and go to state 31

    statement_    go to state 32
    statement     go to state 33
    expression    go to state 34
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 16

    4 optional_variable: optional_variable variable .

    $default  reduce using rule 4 (optional_variable)


State 17

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 18

   11 parameter: IDENTIFIER ':' . type

    REAL     shift, and go to state 42
    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44

    type  go to state 45


State 19

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS . type ';'

    REAL     shift, and go to state 42
    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44

    type  go to state 46


State 20

    8 parameters: parameters ',' . parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 47


State 21

    7 variable: IDENTIFIER ':' . type IS statement_

    REAL     shift, and go to state 42
    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44

    type  go to state 48


State 22

   17 statement_: error . ';'

    ';'  shift, and go to state 49


State 23

   54 primary: IDENTIFIER .

    $default  reduce using rule 54 (primary)


State 24

   51 primary: INT_LITERAL .

    $default  reduce using rule 51 (primary)


State 25

   52 primary: REAL_LITERAL .

    $default  reduce using rule 52 (primary)


State 26

   53 primary: BOOL_LITERAL .

    $default  reduce using rule 53 (primary)


State 27

   32 unary_logic: NOTOP . unary_logic

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    unary_logic  go to state 50
    relation     go to state 37
    term         go to state 38
    factor       go to state 39
    exp          go to state 40
    primary      go to state 41


State 28

   19 statement: REDUCE . binary_operator reductions ENDREDUCE

    ADDOP  shift, and go to state 51
    MULOP  shift, and go to state 52
    RELOP  shift, and go to state 53
    ANDOP  shift, and go to state 54
    OROP   shift, and go to state 55
    REMOP  shift, and go to state 56
    EXPOP  shift, and go to state 57

    binary_operator  go to state 58


State 29

   21 statement: CASE . expression IS cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression    go to state 59
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 30

   20 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression    go to state 60
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 31

   50 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression    go to state 61
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 32

   15 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 62


State 33

   16 statement_: statement . ';'

    ';'  shift, and go to state 63


State 34

   18 statement: expression .
   28 expression: expression . OROP binary_logic

    OROP  shift, and go to state 64

    $default  reduce using rule 18 (statement)


State 35

   29 expression: binary_logic .
   30 binary_logic: binary_logic . ANDOP unary_logic

    ANDOP  shift, and go to state 65

    $default  reduce using rule 29 (expression)


State 36

   31 binary_logic: unary_logic .

    $default  reduce using rule 31 (binary_logic)


State 37

   33 unary_logic: relation .
   41 relation: relation . RELOP term

    RELOP  shift, and go to state 66

    $default  reduce using rule 33 (unary_logic)


State 38

   42 relation: term .
   43 term: term . ADDOP factor

    ADDOP  shift, and go to state 67

    $default  reduce using rule 42 (relation)


State 39

   44 term: factor .
   45 factor: factor . MULOP exp
   46       | factor . REMOP exp

    MULOP  shift, and go to state 68
    REMOP  shift, and go to state 69

    $default  reduce using rule 44 (term)


State 40

   47 factor: exp .

    $default  reduce using rule 47 (factor)


State 41

   48 exp: primary .
   49    | primary . EXPOP exp

    EXPOP  shift, and go to state 70

    $default  reduce using rule 48 (exp)


State 42

   13 type: REAL .

    $default  reduce using rule 13 (type)


State 43

   14 type: BOOLEAN .

    $default  reduce using rule 14 (type)


State 44

   12 type: INTEGER .

    $default  reduce using rule 12 (type)


State 45

   11 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 11 (parameter)


State 46

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type . ';'

    ';'  shift, and go to state 71


State 47

    8 parameters: parameters ',' parameter .

    $default  reduce using rule 8 (parameters)


State 48

    7 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 72


State 49

   17 statement_: error ';' .

    $default  reduce using rule 17 (statement_)


State 50

   32 unary_logic: NOTOP unary_logic .

    $default  reduce using rule 32 (unary_logic)


State 51

   34 binary_operator: ADDOP .

    $default  reduce using rule 34 (binary_operator)


State 52

   35 binary_operator: MULOP .

    $default  reduce using rule 35 (binary_operator)


State 53

   38 binary_operator: RELOP .

    $default  reduce using rule 38 (binary_operator)


State 54

   39 binary_operator: ANDOP .

    $default  reduce using rule 39 (binary_operator)


State 55

   40 binary_operator: OROP .

    $default  reduce using rule 40 (binary_operator)


State 56

   36 binary_operator: REMOP .

    $default  reduce using rule 36 (binary_operator)


State 57

   37 binary_operator: EXPOP .

    $default  reduce using rule 37 (binary_operator)


State 58

   19 statement: REDUCE binary_operator . reductions ENDREDUCE

    $default  reduce using rule 27 (reductions)

    reductions  go to state 73


State 59

   21 statement: CASE expression . IS cases OTHERS ARROW statement_ ENDCASE
   28 expression: expression . OROP binary_logic

    OROP  shift, and go to state 64
    IS    shift, and go to state 74


State 60

   20 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   28 expression: expression . OROP binary_logic

    OROP  shift, and go to state 64
    THEN  shift, and go to state 75


State 61

   28 expression: expression . OROP binary_logic
   50 primary: '(' expression . ')'

    OROP  shift, and go to state 64
    ')'   shift, and go to state 76


State 62

   15 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 77


State 63

   16 statement_: statement ';' .

    $default  reduce using rule 16 (statement_)


State 64

   28 expression: expression OROP . binary_logic

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    binary_logic  go to state 78
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 65

   30 binary_logic: binary_logic ANDOP . unary_logic

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    unary_logic  go to state 79
    relation     go to state 37
    term         go to state 38
    factor       go to state 39
    exp          go to state 40
    primary      go to state 41


State 66

   41 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    term     go to state 80
    factor   go to state 39
    exp      go to state 40
    primary  go to state 41


State 67

   43 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    factor   go to state 81
    exp      go to state 40
    primary  go to state 41


State 68

   45 factor: factor MULOP . exp

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    exp      go to state 82
    primary  go to state 41


State 69

   46 factor: factor REMOP . exp

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    exp      go to state 83
    primary  go to state 41


State 70

   49 exp: primary EXPOP . exp

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    exp      go to state 84
    primary  go to state 41


State 71

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 72

    7 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    CASE          shift, and go to state 29
    IF            shift, and go to state 30
    '('           shift, and go to state 31

    statement_    go to state 85
    statement     go to state 33
    expression    go to state 34
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 73

   19 statement: REDUCE binary_operator reductions . ENDREDUCE
   26 reductions: reductions . statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    ENDREDUCE     shift, and go to state 86
    REDUCE        shift, and go to state 28
    CASE          shift, and go to state 29
    IF            shift, and go to state 30
    '('           shift, and go to state 31

    statement_    go to state 87
    statement     go to state 33
    expression    go to state 34
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 74

   21 statement: CASE expression IS . cases OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 23 (cases)

    cases  go to state 88


State 75

   20 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    CASE          shift, and go to state 29
    IF            shift, and go to state 30
    '('           shift, and go to state 31

    statement_    go to state 89
    statement     go to state 33
    expression    go to state 34
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 76

   50 primary: '(' expression ')' .

    $default  reduce using rule 50 (primary)


State 77

   15 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 15 (body)


State 78

   28 expression: expression OROP binary_logic .
   30 binary_logic: binary_logic . ANDOP unary_logic

    ANDOP  shift, and go to state 65

    $default  reduce using rule 28 (expression)


State 79

   30 binary_logic: binary_logic ANDOP unary_logic .

    $default  reduce using rule 30 (binary_logic)


State 80

   41 relation: relation RELOP term .
   43 term: term . ADDOP factor

    ADDOP  shift, and go to state 67

    $default  reduce using rule 41 (relation)


State 81

   43 term: term ADDOP factor .
   45 factor: factor . MULOP exp
   46       | factor . REMOP exp

    MULOP  shift, and go to state 68
    REMOP  shift, and go to state 69

    $default  reduce using rule 43 (term)


State 82

   45 factor: factor MULOP exp .

    $default  reduce using rule 45 (factor)


State 83

   46 factor: factor REMOP exp .

    $default  reduce using rule 46 (factor)


State 84

   49 exp: primary EXPOP exp .

    $default  reduce using rule 49 (exp)


State 85

    7 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 7 (variable)


State 86

   19 statement: REDUCE binary_operator reductions ENDREDUCE .

    $default  reduce using rule 19 (statement)


State 87

   26 reductions: reductions statement_ .

    $default  reduce using rule 26 (reductions)


State 88

   21 statement: CASE expression IS cases . OTHERS ARROW statement_ ENDCASE
   22 cases: cases . case

    error   shift, and go to state 90
    OTHERS  shift, and go to state 91
    WHEN    shift, and go to state 92

    case  go to state 93


State 89

   20 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 94


State 90

   25 case: error . ';'

    ';'  shift, and go to state 95


State 91

   21 statement: CASE expression IS cases OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 96


State 92

   24 case: WHEN . INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 97


State 93

   22 cases: cases case .

    $default  reduce using rule 22 (cases)


State 94

   20 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    CASE          shift, and go to state 29
    IF            shift, and go to state 30
    '('           shift, and go to state 31

    statement_    go to state 98
    statement     go to state 33
    expression    go to state 34
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 95

   25 case: error ';' .

    $default  reduce using rule 25 (case)


State 96

   21 statement: CASE expression IS cases OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    CASE          shift, and go to state 29
    IF            shift, and go to state 30
    '('           shift, and go to state 31

    statement_    go to state 99
    statement     go to state 33
    expression    go to state 34
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 97

   24 case: WHEN INT_LITERAL . ARROW statement ';'

    ARROW  shift, and go to state 100


State 98

   20 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 101


State 99

   21 statement: CASE expression IS cases OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 102


State 100

   24 case: WHEN INT_LITERAL ARROW . statement ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    CASE          shift, and go to state 29
    IF            shift, and go to state 30
    '('           shift, and go to state 31

    statement     go to state 103
    expression    go to state 34
    binary_logic  go to state 35
    unary_logic   go to state 36
    relation      go to state 37
    term          go to state 38
    factor        go to state 39
    exp           go to state 40
    primary       go to state 41


State 101

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 20 (statement)


State 102

   21 statement: CASE expression IS cases OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 21 (statement)


State 103

   24 case: WHEN INT_LITERAL ARROW statement . ';'

    ';'  shift, and go to state 104


State 104

   24 case: WHEN INT_LITERAL ARROW statement ';' .

    $default  reduce using rule 24 (case)
